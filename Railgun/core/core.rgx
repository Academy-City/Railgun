let let-macro
    macro (name args & body)
        quasiquote
            let ,name (macro ,args ,@body)

let-macro let-fn (name args & body)
    quasiquote
        let ,name (fn ,args ,@body)

let-macro def (category name & body)
    quasiquote
        # let ,name (,category (splice body))
        let ,name (,category ,@body)

let-macro use-as (var name)
    quasiquote
        let ,var (use ,name)

let-macro foreach (item iter & body)
    quasiquote
        foreach-fn ,iter (fn (,item) ,@body)
